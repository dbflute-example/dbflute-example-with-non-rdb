##
## Copyright 2014-2016 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##
${manager.allClassCopyright}package ${request.package}.bsentity;

import java.io.Serializable;

import org.apache.solr.client.solrj.beans.Field;
import org.dbflute.solr.entity.AbstractSolrEntity;

/**
 * Base Entity class of Solr schema "${tableMap.schema}."
 * @author FreeGen
 */
public class SolrBs${tableMap.schema} extends AbstractSolrEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
#foreach ($column in $request.columnList)
#if(${column.stored})
    /** ${column.name} (${column.nativeType}) */
    protected ${column.type} ${column.uncapCamelName};

#end
#end
    // ===================================================================================
    //                                                                        Solr DB Meta
    //                                                                        ============
    @Override
    public String asSchemaName() {
        return "${tableMap.schema}";
    }

    // ===================================================================================
    //                                                                            Accessor
    //                                                                            ========
#foreach ($column in $request.columnList)
#if(${column.stored})
    public ${column.type} get${column.capCamelName}() {
        checkSpecifiedProperty("${column.uncapCamelName}");
        return ${column.uncapCamelName};
    }

#if(${column.type} == "java.time.LocalDate")
    public void set${column.capCamelName}(${column.type} value) {
        registerModifiedProperty("${column.uncapCamelName}");
        ${column.uncapCamelName} = value;
    }

    @Field("${column.name}")
    protected void _set${column.capCamelName}(java.util.Date value) {
        registerModifiedProperty("${column.uncapCamelName}");
        ${column.uncapCamelName} = new org.dbflute.helper.HandyDate(value).getLocalDate();
    }
#elseif(${column.type} == "java.time.LocalDateTime")
    @Field("${column.name}")
    protected void _set${column.capCamelName}(java.util.Date value) {
        registerModifiedProperty("${column.uncapCamelName}");
        ${column.uncapCamelName} = new org.dbflute.helper.HandyDate(value).getLocalDateTime();
    }

    public void set${column.capCamelName}(${column.type} value) {
        registerModifiedProperty("${column.uncapCamelName}");
        ${column.uncapCamelName} = value;
    }
#else
    @Field("${column.name}")
    public void set${column.capCamelName}(${column.type} value) {
        registerModifiedProperty("${column.uncapCamelName}");
        ${column.uncapCamelName} = value;
    }
#end

#end
#end
    // ===================================================================================
    //                                                                            toString
    //                                                                            ========
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("[");
#foreach ($column in $request.columnList)
#if(${column.stored})
        sb.append("${column.uncapCamelName}").append("=").append(${column.uncapCamelName}).append(",");
#end
#end
        sb.append("]");
        return sb.toString();
    }
}
