##
## Copyright 2014-2018 the original author or authors.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
## either express or implied. See the License for the specific language
## governing permissions and limitations under the License.
##
${manager.allClassCopyright}package ${data.package};

import org.dbflute.kvs.store.cbean.KvsStoreConditionBean;
import org.dbflute.kvs.store.entity.dbmeta.KvsStoreDBMeta;

import ${data.dbMeta.package}.${data.dbMeta.className};
import ${data.exConditionBean.package}.${data.exConditionBean.className};
import ${data.exConditionQuery.package}.${data.exConditionQuery.className};

/**
 * The base condition-bean of (${data.comment})${data.tableName}.
 * @author FreeGen
 */
public abstract class ${data.className} implements KvsStoreConditionBean {

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
    protected ${data.exConditionQuery.className} _conditionQuery;

    // ===================================================================================
    //                                                                               Query
    //                                                                               =====
    public ${data.exConditionQuery.className} query() {
        return doGetConditionQuery();
    }

    protected ${data.exConditionQuery.className} doGetConditionQuery() {
        if (_conditionQuery == null) {
            _conditionQuery = new ${data.exConditionQuery.className}();
        }
        return _conditionQuery;
    }

    @Override
    public KvsStoreDBMeta asDBMeta() {
        return ${data.dbMeta.className}.getInstance();
    }

#set ($acceptPkParameter = "")
#foreach ($column in $data.columnList)
#if ($column.kvsKey)
#if ($velocityCount > 1)
#set ($acceptPkParameter = $acceptPkParameter + ", ")
#end
#set ($acceptPkParameter = $acceptPkParameter + $column.type + " " + ${manager.initUncap($column.camelizedName)})
#end
#end
    public ${data.exConditionBean.className} acceptPK($acceptPkParameter) {
        ${data.exConditionBean.bs.className} cb = this;
#foreach ($column in $data.columnList)
#if ($column.kvsKey)
        cb.query().set${column.camelizedName}_Equal(${manager.initUncap($column.camelizedName)});
#end
#end

        return (${data.exConditionBean.className}) this;
    }
}
